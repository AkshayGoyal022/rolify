{
  "name":"rolify",
  "body":"**Very simple Role management library without any authorization enforcement supporting scope on resource object (class checking and resource checking).**\r\n\r\nLetâ€™s see an example:\r\n\r\n```ruby\r\n> user.has_role?(:moderator, Forum.first)\r\n=> false # if user is moderator of another Forum\r\n```\r\nThis library is generic enough to be used by any authentication/authorization solutions. Look at his [Tutorial](https://github.com/RolifyCommunity/rolify/wiki/Tutorial) if you want to checkout an example showing how to integrate [rolify](https://github.com/RolifyCommunity/rolify) with [CanCanCan](https://github.com/CanCanCommunity/cancancan) and [Devise](https://github.com/plataformatec/devise).\r\n\r\n## Dependencies\r\n\r\n* >= Rails 3.1\r\n* ActiveRecord or Mongoid ORMs\r\n\r\n## Installation\r\n\r\nIn Rails 3, add this to your Gemfile and run the bundle command:\r\n\r\n```ruby\r\n   gem 'rolify'\r\n```\r\n\r\nAlternatively, you can install it as a plugin:\r\n\r\n```\r\n$ rails plugin install git://github.com/RolifyCommunity/rolify.git\r\n```\r\n\r\n## Authors and contributors\r\nAuthor: Florent Monbillard (@EppO)\r\n\r\nContributors: Scott Tesoriere (@scottkf)\r\n\r\n## License\r\nMIT-License\r\n\r\n## Support\r\nHaving trouble with rolify ? Check out the [documentation](https://github.com/RolifyCommunity/rolify/wiki) and/or submit an [issue](https://github.com/RolifyCommunity/rolify/issues).",
  "tagline":"Role management library with resource scoping","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}